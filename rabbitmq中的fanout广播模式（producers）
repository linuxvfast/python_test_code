Exchange在定义的时候是有类型的，以决定到底是哪些Queue符合条件，可以接收消息

fanout: 所有bind到此exchange的queue都可以接收消息
direct: 通过routingKey和exchange决定的那个唯一的queue可以接收消息
topic:所有符合routingKey(此时可以是一个表达式)的routingKey所bind的queue可以接收消息

　　 表达式符号说明：#代表一个或多个字符，*代表任何字符
      例：#.a会匹配a.a，aa.a，aaa.a等
          *.a会匹配a.a，b.a，c.a等
     注：使用RoutingKey为#，Exchange Type为topic的时候相当于使用fanout　

headers: 通过headers 来决定把消息发给哪些queue


import sys
import pika


credentals = pika.PlainCredentials('rabbit','rabbit')
conn = pika.BlockingConnection(pika.ConnectionParameters('localhost',5672,'/',credentals))
channel = conn.channel() #声明管道
channel.exchange_declare(exchange='logs',exchange_type='fanout') #绑定exchange，指定类型是fanout广播模式
message = ''.join(sys.argv[1:]) or 'info:hello world2'   #要发送的信息
channel.basic_publish(exchange='logs',
                      routing_key='', #routing_key绑定exchange，必须为空
                      body=message)
print("[x] send 'hello world!'")
conn.close()

与普通的消息发送对比，是不声明队列名的，只是绑定到exchange并指定了类型
