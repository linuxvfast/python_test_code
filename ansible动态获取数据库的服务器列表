import argparse
import json
from collections import defaultdict
from contextlib import contextmanager
import pymysql


def parse_args():
    '''help message'''
    parse = argparse.ArgumentParser(description='get server list')
    group = parse.add_mutually_exclusive_group(required=True)
    group.add_argument('--list',action='store_true',help='list active servers')
    group.add_argument('--host',help='list details about the specific host')
    return parse.parse_args()

@contextmanager
def get_conn(**kwargs):
    '''use decorator generate Context manager'''
    conn = pymysql.connect(**kwargs)
    try:
        yield conn
    finally:
        conn.close()

def list_all_hosts(conn):
    '''get all host '''
    hosts = defaultdict(list)  #使用一个类型来初始化
    with conn as cur:
        cur.execute('select * from hosts')
        rows = cur.fetchall()
        for row in rows:
            no,host,group,user,port = row
            hosts[group].append(host)
    return hosts

def to_json(dict):
    '''Print the results in the json format'''
    return json.dumps(dict,sort_keys=True,indent=2)

def get_host_detail(conn,host):
    '''detaild infomation for specified host'''
    details = {}
    with conn as cur:
        cur.execute("select * from hosts where host='{0}'".format(host))
        rows = cur.fetchall()
        if rows:
            no,host,group,user,port = rows[0]
            details.update(ansible_user=user,ansible_port=port)
    return details


def main():
    parse = parse_args()
    with get_conn(host='192.168.10.67',user='root',passwd='123456',db='code') as conn:
        if parse.list:
            hosts = list_all_hosts(conn)
            print(to_json(hosts))
        else:
            details = get_host_detail(conn,parse.host)
            print(to_json(details))

if __name__ == '__main__':
    main()
