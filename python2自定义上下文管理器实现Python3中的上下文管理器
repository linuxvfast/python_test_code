方法一：
#!/usr/bin/env python
#-*- coding:utf-8 -*-
import codecs  #Python标准模块


class Open(object):

    def __init__(self,filename,mode,encoding="utf-8"): #指定默认的字符集
        self.fp = codecs.open(filename,mode,encoding)

    def __enter__(self): #实现python3中的上下文管理器的方法__enter__
        return self.fp

    def __exit__(self,exc_type,exc_val,exc_tb): #使用Python3中的上下文管理器的方法__exit__
        self.fp.close()

data = u'上下文管理器\n'
with Open('data.txt','w') as f:
    f.write(data)

    
    
    
    方法二：
import codecs
from contextlib import contextmanager   #contextlib能够简化实现上下文管理器的逻辑


@contextmanager  #通过contextmanager修饰之后不用实现__enter__和__exit__方法，直接变成上下文管理器
def Open(filename,mode,encoding='utf-8'):
    fp = codecs.open(filename,mode,encoding)
    try:
        yield fp
    finally:
        fp.close()

data = u'上下文管理器\n'
with Open('data.txt','w') as f:
    f.write(data)

yeild表达式所在的地方，就是with语句块的地方 
with语句块抛出的任何异常才会由yield表达式重新抛出
